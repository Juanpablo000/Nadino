/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package codigo;
import static codigo.Home.JP_content;
import java.awt.BorderLayout;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author juanp
 */
public class Libros extends javax.swing.JPanel {

    /**
     * Creates new form Libros
     */
    public Libros() {
        initComponents();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        jtxtLibro = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        jB_Eliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(750, 430));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("Libros");
        jPanel1.add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jtxtLibro.setForeground(new java.awt.Color(102, 102, 102));
        jtxtLibro.setText("Ingrese el titulo del Libro a buscar");
        jtxtLibro.setBorder(null);
        jtxtLibro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtxtLibroMousePressed(evt);
            }
        });
        jtxtLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtLibroActionPerformed(evt);
            }
        });
        jPanel1.add(jtxtLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 570, 30));

        btnBuscar.setBackground(new java.awt.Color(54, 33, 89));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.setBorderPainted(false);
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.setDefaultCapable(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, -1, 30));

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Titulo", "Autor", "Año", "Categoria", "Edición", "Ejemplares", "Disponibles"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Short.class, java.lang.Short.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaLibros);
        if (tablaLibros.getColumnModel().getColumnCount() > 0) {
            tablaLibros.getColumnModel().getColumn(0).setResizable(false);
            tablaLibros.getColumnModel().getColumn(1).setResizable(false);
            tablaLibros.getColumnModel().getColumn(2).setResizable(false);
            tablaLibros.getColumnModel().getColumn(3).setResizable(false);
            tablaLibros.getColumnModel().getColumn(4).setResizable(false);
            tablaLibros.getColumnModel().getColumn(5).setResizable(false);
            tablaLibros.getColumnModel().getColumn(6).setResizable(false);
            tablaLibros.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 650, 240));

        jB_Eliminar.setBackground(new java.awt.Color(54, 33, 89));
        jB_Eliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jB_Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        jB_Eliminar.setText("Eliminar");
        jB_Eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jB_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_EliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jB_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 340, -1, 40));

        btnEditar.setBackground(new java.awt.Color(54, 33, 89));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 100, 40));

        btnNuevo.setBackground(new java.awt.Color(54, 33, 89));
        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 80, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 410));
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtLibroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxtLibroMousePressed
        if(jtxtLibro.getText().equals("Ingrese el titulo del Libro a buscar"))
        jtxtLibro.setText("");
    }//GEN-LAST:event_jtxtLibroMousePressed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // Abrir sección
        upLibros p1 = new upLibros();
        p1.setSize(750, 430);
        p1.setLocation(0,0);

        JP_content.removeAll();
        JP_content.add(p1, BorderLayout.CENTER);
        JP_content.revalidate();
        JP_content.repaint();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try{
            //obtiene el id de la celda selccionada del Jtable [0,1,2,3,4,.....]
            int row = tablaLibros.getSelectedRow();
            if(row <= -1){
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }else{
                int column = 0;
                int valorID = Integer.parseInt(tablaLibros.getModel().getValueAt(row, column).toString());
                
                if(valorID <= 0){
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    String titulo=tablaLibros.getModel().getValueAt(row,1).toString();
                    String autor=tablaLibros.getModel().getValueAt(row,2).toString();
                    int year =Integer.parseInt(tablaLibros.getModel().getValueAt(row,3).toString());
                    String categoria =tablaLibros.getModel().getValueAt(row,4).toString();
                    String edicion =tablaLibros.getModel().getValueAt(row,5).toString();
                    String ejemplares =tablaLibros.getModel().getValueAt(row,6).toString();
                    upLibros p1 = new upLibros(valorID, titulo, autor, year, categoria, edicion,ejemplares);
                    p1.setSize(750, 430);
                    p1.setLocation(0, 0);

                    JP_content.removeAll();
                    JP_content.add(p1, BorderLayout.CENTER);
                    JP_content.revalidate();
                    JP_content.repaint();
                }   
            }
            
       }catch(Exception ex){
           JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
       }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jB_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_EliminarActionPerformed
        Connection con = null;
        PreparedStatement prSt = null;
        String query;
        
        try{
            //obtiene el id de la celda selccionada del Jtable [0,1,2,3,4,.....]
            int row = tablaLibros.getSelectedRow();
            if(row <= -1){
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a eliminar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }else{
                int column = 0;
                int valorID = Integer.parseInt(tablaLibros.getModel().getValueAt(row, column).toString());
                
                if(valorID <= 0){
                    javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el libro a borrar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    con = Conexion.getConnection();
                    query = "DELETE FROM Libros WHERE IdLibro = ?";
                    prSt = con.prepareStatement(query);
                    prSt.setInt(1, valorID);
                    prSt.executeUpdate();
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "¡Libro borrado! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    cargarTabla();
                }   
            }
            
       }catch(SQLException ex){
           JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
       }
    }//GEN-LAST:event_jB_EliminarActionPerformed

    private void jtxtLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtLibroActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Connection con = null;
        PreparedStatement prSt = null;
        ResultSet rs = null;
        String query;
        
        try{
            DefaultTableModel modeloTabla = (DefaultTableModel)tablaLibros.getModel();
            modeloTabla.setRowCount(0);
            String nomLibro = jtxtLibro.getText();
            
            con = Conexion.getConnection();
            query = "SELECT  IdLibro, t.Titulo, Autor, Año, Categoria, Edicion, Ejemplares, Disponibles\n" +
                    "FROM Libros lb\n" +
                    "INNER JOIN Titulos t ON lb.IdTitulo = t.IdTitulo\n" +
                    "INNER JOIN Autores a ON lb.IdAutor = a.IdAutor  \n" +
                    "INNER JOIN Categorias c ON lb.IdCategoria = c.IdCategoria\n" +
                    "WHERE t.Titulo LIKE ?";
            prSt = con.prepareStatement(query);
            prSt.setString(1, "%" + nomLibro + "%");
            rs = prSt.executeQuery();
            
           
            while(rs.next()){
                 Object[] fila = new Object[8];
                 for(int indice = 0; indice <8; indice++){
                    fila[indice] = rs.getObject(indice +1);
                 }
                 modeloTabla.addRow(fila);
            }
            
           
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
       }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cargarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel)tablaLibros.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        
        int[] anchos = {3,90,90,10,30,10,10,10};
        for(int i=0; i<tablaLibros.getColumnCount();i++){
            tablaLibros.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        
        try{
            Connection con = Conexion.getConnection();
            ps = con.prepareStatement("SELECT  IdLibro, t.Titulo, Autor, Año, Categoria, Edicion, Ejemplares, Disponibles \n" +
                                      "FROM Libros lb\n" +
                                      "INNER JOIN Titulos t ON lb.IdTitulo = t.IdTitulo\n" +
                                      "INNER JOIN Autores a ON lb.IdAutor = a.IdAutor  \n" +
                                      "INNER JOIN Categorias c ON lb.IdCategoria = c.IdCategoria");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
                Object[] fila = new Object[columnas];
                for(int indice = 0; indice <columnas; indice++){
                    fila[indice] = rs.getObject(indice +1);
                }
                modeloTabla.addRow(fila);
                
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton jB_Eliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtxtLibro;
    private javax.swing.JTable tablaLibros;
    // End of variables declaration//GEN-END:variables
}
